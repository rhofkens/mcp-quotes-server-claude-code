name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test
        env:
          CI: true

      - name: Build project
        run: npm run build

      - name: Extract version from tag
        id: extract_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Verify package version matches tag
        run: |
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          TAG_VERSION="${{ steps.extract_version.outputs.VERSION }}"
          if [ "$PACKAGE_VERSION" != "$TAG_VERSION" ]; then
            echo "Error: Package version ($PACKAGE_VERSION) does not match tag version ($TAG_VERSION)"
            exit 1
          fi

      - name: Generate changelog
        id: changelog
        run: |
          # Get the current tag
          CURRENT_TAG=${GITHUB_REF#refs/tags/}

          # Get the previous tag
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 $CURRENT_TAG^ 2>/dev/null || echo "")

          # Generate changelog
          if [ -z "$PREVIOUS_TAG" ]; then
            echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
            echo "## Initial Release" >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            echo "First release of MCP Quotes Server" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
            echo "## What's Changed" >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            git log --pretty=format:"* %s (%h)" $PREVIOUS_TAG..$CURRENT_TAG >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: Publish to NPM
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: Release ${{ steps.extract_version.outputs.VERSION }}
          body: |
            ## MCP Quotes Server v${{ steps.extract_version.outputs.VERSION }}

            ${{ steps.changelog.outputs.CHANGELOG }}

            ## Installation

            ```bash
            npm install @mcp/quotes-server@${{ steps.extract_version.outputs.VERSION }}
            ```

            ## Full Changelog

            https://github.com/${{ github.repository }}/compare/${{ github.event.before }}...${{ github.ref }}
          draft: false
          prerelease: false
          files: |
            dist/**/*

      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts-v${{ steps.extract_version.outputs.VERSION }}
          path: |
            dist/
            package.json
            README.md
          retention-days: 90
